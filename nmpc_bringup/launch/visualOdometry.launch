<launch>
    <arg name = "stereo" value = "true" />
    <arg name = "vo" value = "false" />
    <arg name = "obs_detection" value = "true" />
    
    <arg name="imu_topic"                    default="/vehicle/imu"/>
    
    <arg name="vo_topic"                     default="/vehicle/visualOdometry"/>
    <arg name="vo_topic_info"                default="/vehicle/visualOdometry_Info"/>
    <arg name="vo_topic_last_frame"          default="/vehicle/visualOdometry_LastFrame"/>
    <arg name="vo_topic_local_map"           default="/vehicle/visualOdometry_LocalMap"/>

    <arg name="lidar_topic"                  default="/vehicle/laser/scan"/>

    <arg name="fixed_frame"                  default="base_link"/>
    <arg name="odom_frame"                   default="odom"/>
    <arg name="publish_tf_vo"                default="false"/>
    <arg name="tf_prefix"                    default=""/>
    <arg name="wait_for_transform"           default="true"/>
    <arg name="initial_pose"                 default=""/>
    <arg name="queue_size"                   default="10"/>
    <arg name="publish_null_when_lost"       default="false"/>
    <arg name="ground_truth_frame_id"        default=""/>
    <arg name="ground_truth_base_frame_id"   default=""/>
    <arg name="guess_frame_id"               default=""/>
    <arg name="guess_min_translation"        default="0.1"/>
    <arg name="guess_min_rotation"           default="0.1"/>
    <arg name="config_path"                  default=""/>
    <arg name="wait_imu_to_init"             default="true"/>

    <!-- Point cloud simplification -->
    <arg name="decimation"                   default="4"/>
    <arg name="voxel_size"                   default="0.1"/>
    <arg name="min_depth"                    default="0.1"/>
    <arg name="max_depth"                    default="0.0"/>
    <arg name="noise_filter_radius"          default="1.0"/>
    <arg name="noise_filter_min_neighbors"   default="2"/>
    <arg name="normal_k"                     default="0"/>
    <arg name="normal_radius"                default="0.0"/>
    <arg name="filter_nans"                  default="false"/>
    <arg name="roi_ratios"                   default="0.0 0.0 0.0 0.0"/>
    
    <!-- Obstacle avoidance -->
    <arg name="normal_estimation_radius"     default="0.05"/>
    <arg name="ground_normal_angle"          default="0.5"/>
    <arg name="min_cluster_size"             default="20"/>
    <arg name="max_obstacles_height"         default="0.0"/>
    
    <arg name="approx_sync"                  default="false"/>
    <arg name="subscribe_rgbd"               default="false"/>
    <arg name="rgbd_cameras"                 default="1"/>

    <arg name="left_camera"                  default="/vehicle/stereo_camera/left/image_rect"/>
    <arg name="left_camera_metadata"         default="/vehicle/stereo_camera/left/camera_info"/>
    <arg name="right_camera"                 default="/vehicle/stereo_camera/right/image_rect"/>
    <arg name="right_camera_metadata"        default="/vehicle/stereo_camera/right/camera_info"/>

    <!-- Launch visual odometry -->
    <group if = "$(arg stereo)" >
        <group if = "$(arg vo)" >
            <node name = "visualOdometry" pkg = "rtabmap_odom" type = "stereo_odometry" output="screen">
            
                <!-- Advanced parameter tuning -->

                <!-- 0=Frame-to-Map (F2M) 1=Frame-to-Frame (F2F) -->
                <param name="Odom/Strategy" value="1"/>

                <!-- Correspondences: 0=Features Matching, 1=Optical Flow -->
                <param name="Vis/CorType" value="0"/>

                <!-- maximum features map size, default 2000 -->
                <param name="OdomF2M/MaxSize" type="string" value="1000"/>

                <!-- maximum features extracted by image, default 1000 -->
                <param name="Vis/MaxFeatures" type="string" value="600"/>

                <!-- default 5 pixels -->
                <param name="GFTT/MinDistance" type="string" value="5"/>

                <!--  -->
                <param name="GFTT/QualityLevel" type="string" value="0.00001"/> 

                <!-- Reset odometry when lost -->
                <param name="Odom/ResetCountdown" type="string" value="1"/>

                <param name="Odom/GuessMotion" value="true"/>

                <param name="Odom/Holonomic" value="false"/>

                <param name="Stereo/MinDisparity" value="0"/>

                <param name="Vis/CorGuessWinSize" value="40"/>

                <remap from="imu"                             to="$(arg imu_topic)"/>
                
                <remap from="odom"                            to="$(arg vo_topic)"/>
                <remap from="odom_info"                       to="$(arg vo_topic_info)"/>
                <remap from="odom_last_frame"                 to="$(arg vo_topic_last_frame)"/>
                <remap from="odom_local_map"                  to="$(arg vo_topic_local_map)"/>

                <remap from="left/image_rect"                 to="$(arg left_camera)"/>
                <remap from="left/camera_info"                to="$(arg left_camera_metadata)"/>
                <remap from="right/image_rect"                to="$(arg right_camera)"/>
                <remap from="right/camera_info"               to="$(arg right_camera_metadata)"/>

                <param name="frame_id"                        type="string" value="$(arg fixed_frame)"/>
                <param name="odom_frame_id"                   type="string" value="$(arg odom_frame)"/>
                <param name="publish_tf"                      type="bool" value="$(arg publish_tf_vo)"/>
                <param name="tf_prefix"                       type="string" value="$(arg tf_prefix)"/>
                <param name="wait_for_transform"              type="bool" value="$(arg wait_for_transform)"/>
                <param name="initial_pose"                    type="string" value="$(arg initial_pose)"/>
                <param name="queue_size"                      type="int" value="$(arg queue_size)"/>
                <param name="publish_null_when_lost"          type="bool" value="$(arg publish_null_when_lost)"/>
                <param name="ground_truth_frame_id"           type="string" value="$(arg ground_truth_frame_id)"/>
                <param name="ground_truth_base_frame_id"      type="string" value="$(arg ground_truth_base_frame_id)"/>
                <param name="guess_frame_id"                  type="string" value="$(arg guess_frame_id)"/>
                <param name="guess_min_translation"           type="double" value="$(arg guess_min_translation)"/>
                <param name="guess_min_rotation"              type="double" value="$(arg guess_min_rotation)"/>
                <param name="config_path"                     type="string" value="$(arg config_path)"/>
                <param name="wait_imu_to_init"                type="bool" value="$(arg wait_imu_to_init)"/>
                
                <param name="approx_sync"                     type="bool" value="$(arg approx_sync)"/>
                <param name="subscribe_rgbd"                  type="bool" value="$(arg subscribe_rgbd)"/>
                <param name="rgbd_cameras"                    type="int" value="$(arg rgbd_cameras)"/>
            
            </node>

            <!-- RTAB visualization (for features matching/optical flow to viz visual odometry computation through image sequences)-->
            <node name = "rtabmap_visualization" pkg = "rtabmap_viz" type = "rtabmap_viz">
                <param name="frame_id"                      type="string" value="base_link" />
                <param name="odom_frame_id"                 type="string" value="odom" />
                <param name="subscribe_stereo"              type="bool" value="true" />
                <param name="subscribe_odom_info"           type="bool" value="true" />

                <remap from="odom"                          to="/vehicle/visualOdometry"/>
                
                <remap from="left/camera_info"              to="/vehicle/stereo_camera/left/camera_info"/>
                <remap from="right/camera_info"             to="/vehicle/stereo_camera/right/camera_info"/>

                <remap from="left/image_rect"               to="/vehicle/stereo_camera/left/image_rect"/>
                <remap from="right/image_rect"              to="/vehicle/stereo_camera/right/image_rect"/>
                
                <remap from="odom_info"                     to="/vehicle/visualOdometry_Info"/>
            </node>
        </group>

        <!-- Rotate the camera frame. -->
        <arg name="pi/2" value="1.5707963267948966" />
        <arg name="optical_rotate" value="0.02 0.0 0.015 -$(arg pi/2) 0.0 -2.00712864" />
        <node pkg="tf" type="static_transform_publisher" name="stereo_frame_tf" args="$(arg optical_rotate) sensor_base_top_bar stereo_camera_link 50" />
        
        <!-- Launch stereo image processing node -->
        <node name = "stereo_proc" pkg = "stereo_image_proc" type = "stereo_image_proc" ns = "/vehicle/stereo_camera" />
        
        <!-- downsample raw point cloud -->
        <group if="$(arg obs_detection)">
            <node pkg = "nodelet" type = "nodelet" name = "rtabmap_utils_nodelet" args = "manager" />

            <node pkg = "nodelet" type = "nodelet" name = "point_cloud_xyzrgb" args = "load rtabmap_util/point_cloud_xyzrgb rtabmap_utils_nodelet">
                <remap from="left/image"        to="$(arg left_camera)"/>
                <remap from="right/image"       to="$(arg right_camera)"/>

                <remap from="left/camera_info"  to="$(arg left_camera_metadata)"/>
                <remap from="right/camera_info" to="$(arg right_camera_metadata)"/>
                
                <remap from="cloud"             to="/vehicle/stereo_camera/cloud_rect" />

                <param name="queue_size"        type="int"    value="$(arg queue_size)"/>
                <param name="approx_sync"       type="bool"   value="$(arg approx_sync)"/>
                <param name="decimation"        type="int"    value="$(arg decimation)"/>
                <param name="voxel_size"        type="double" value="$(arg voxel_size)"/>
                <param name="min_depth"         type="double" value="$(arg min_depth)"/>
                <param name="max_depth"         type="double" value="$(arg max_depth)"/>
                <param name="noise_filter_radius"   type="double"   value="$(arg noise_filter_radius)"/>
                <param name="noise_filter_min_neighbors"   type="double"   value="$(arg noise_filter_min_neighbors)"/>
            </node>

            <!-- Obstacles detection -->
            <node pkg = "nodelet" type = "nodelet" name = "obstacles_detection" args = "load rtabmap_util/obstacles_detection rtabmap_utils_nodelet">
                <remap from="cloud"         to="/vehicle/stereo_camera/cloud_rect"/>
                <remap from="ground"        to="/vehicle/stereo_camera/ground"/>
                <remap from="obstacles"     to="/vehicle/stereo_camera/obstacles"/>

                <param name="frame_id"                        type="string" value="$(arg fixed_frame)"/>
                <param name="queue_size"                      type="int"    value="$(arg queue_size)"/>
                <param name="normal_estimation_radius"        type="double" value="$(arg normal_estimation_radius)"/>
                <param name="ground_normal_angle"             type="double" value="$(arg ground_normal_angle)"/>
                <param name="min_cluster_size"                type="int"    value="$(arg min_cluster_size)"/>
                <param name="max_obstacles_height"            type="double" value="$(arg max_obstacles_height)"/>
            </node>
        </group>
    </group>
    <group unless = "$(arg stereo)">    <!-- in case a lidar is used -->
        <node name = "visualOdometry" pkg = "rtabmap_odom" type = "icp_odometry" output="screen">
            <remap from="scan"                   to="$(arg lidar_topic)"/>

            <param name="Icp/VoxelSize"          type="double" value="5.0"/>

            <param name="Reg/Strategy"           type="int" value="1"/>

            <param name="scan_cloud_max_points"            type="int" value="0"/>
            <param name="scan_downsampling_step"           type="int" value="1"/>
            <param name="scan_voxel_size"                  type="double" value="0.0"/>
            <param name="scan_normal_k"                    type="int" value="0"/>
            <param name="scan_normal_radius"               type="double" value="0.0"/>
            <param name="deskewing"                        type="bool" value="false"/>
            <param name="deskewing_slerp"                  type="bool" value="false"/>
        </node>
    </group>
</launch>